version: '3.8'

services:
  # 编译服务
  compiler:
    build:
      context: .
      dockerfile: Dockerfile.compile
      target: compiler
    volumes:
      - ./dist:/app/dist
      - ./build:/app/build
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "
        echo '开始编译 Cython 扩展...' &&
        python setup.py build_ext --inplace &&
        echo '创建 wheel 分发包...' &&
        python setup.py bdist_wheel &&
        echo '编译完成，文件保存在 dist/ 目录'
      "

  # 编译后的应用服务
  app-compiled:
    build:
      context: .
      dockerfile: Dockerfile.compile
      target: runtime
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=Resource Recommendation API
      - APP_VERSION=1.0.0
      - DEBUG=false
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=12345678
      - MYSQL_DATABASE=resource_recommendation
      - MYSQL_CHARSET=utf8mb4
      - API_KEY=${API_KEY:-your_openai_api_key_here}
      - BASE_URL=${BASE_URL:-https://api.openai.com/v1}
      - MODEL=${MODEL:-gpt-4o}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-small}
      - LOG_LEVEL=INFO
      - LOG_FILE=./logs/app.log
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_DATABASE=resource_recommendation
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app-compiled
    restart: unless-stopped
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    driver: bridge